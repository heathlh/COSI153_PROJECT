{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction ToDoItem(_ref) {\n  var task = _ref.task,\n    image = _ref.image,\n    handleDelete = _ref.handleDelete;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    completed = _useState2[0],\n    setCompleted = _useState2[1];\n  var handleComplete = function handleComplete() {\n    setCompleted(!completed);\n  };\n  return _jsxs(SafeAreaView, {\n    style: styles.itemContainer,\n    children: [image && _jsx(Image, {\n      source: {\n        uri: image.uri\n      },\n      style: {\n        width: 50,\n        height: 50\n      }\n    }), _jsx(Text, {\n      style: completed ? styles.completedTask : null,\n      children: task\n    }), _jsxs(View, {\n      style: styles.buttonsContainer,\n      children: [_jsx(Button, {\n        title: \"Completed\",\n        onPress: handleComplete,\n        color: completed ? \"green\" : null\n      }), _jsx(View, {\n        style: styles.space\n      }), _jsx(Button, {\n        title: \"Delete\",\n        onPress: handleDelete,\n        color: \"red\"\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  itemContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginVertical: 10\n  },\n  buttonsContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  space: {\n    width: 20\n  },\n  completedTask: {\n    textDecorationLine: 'line-through',\n    color: 'green'\n  }\n});\nexport default ToDoItem;","map":{"version":3,"names":["React","useState","View","Text","Button","StyleSheet","SafeAreaView","Image","jsx","_jsx","jsxs","_jsxs","ToDoItem","_ref","task","image","handleDelete","_useState","_useState2","_slicedToArray","completed","setCompleted","handleComplete","style","styles","itemContainer","children","source","uri","width","height","completedTask","buttonsContainer","title","onPress","color","space","create","flexDirection","justifyContent","alignItems","marginVertical","textDecorationLine"],"sources":["/Users/liaohang/Desktop/COSI153/COSI153_PROJECT/AwesomeProject/components/ToDoItem.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, Button, StyleSheet, SafeAreaView, Image } from 'react-native';\n\nfunction ToDoItem({ task, image, handleDelete }) {\n    const [completed, setCompleted] = useState(false);\n\n    const handleComplete = () => {\n        setCompleted(!completed);\n    }\n\n    return (\n        <SafeAreaView style={styles.itemContainer}>\n            {image && (\n                <Image\n                  source={{uri: image.uri}}\n                  style={{width: 50, height: 50}}\n                />\n            )}\n            <Text style={completed ? styles.completedTask : null}>{task}</Text>\n            <View style={styles.buttonsContainer}>\n                <Button title=\"Completed\" onPress={handleComplete} color={completed ? \"green\" : null} />\n                <View style={styles.space} />\n                <Button title=\"Delete\" onPress={handleDelete} color=\"red\" />\n            </View>\n        </SafeAreaView>\n    );\n}\n\nconst styles = StyleSheet.create({\n    itemContainer: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        marginVertical: 10,\n    },\n    buttonsContainer: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n    },\n    space: {\n        width: 20,\n    },\n    completedTask: {\n        textDecorationLine: 'line-through',\n        color: 'green',\n    },\n});\n\nexport default ToDoItem;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,YAAA;AAAA,OAAAC,KAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGxC,SAASC,QAAQA,CAAAC,IAAA,EAAgC;EAAA,IAA7BC,IAAI,GAAAD,IAAA,CAAJC,IAAI;IAAEC,KAAK,GAAAF,IAAA,CAALE,KAAK;IAAEC,YAAY,GAAAH,IAAA,CAAZG,YAAY;EACzC,IAAAC,SAAA,GAAkChB,QAAQ,CAAC,KAAK,CAAC;IAAAiB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA1CG,SAAS,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;EAE9B,IAAMI,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAS;IACzBD,YAAY,CAAC,CAACD,SAAS,CAAC;EAC5B,CAAC;EAED,OACIT,KAAA,CAACL,YAAY;IAACiB,KAAK,EAAEC,MAAM,CAACC,aAAc;IAAAC,QAAA,GACrCX,KAAK,IACFN,IAAA,CAACF,KAAK;MACJoB,MAAM,EAAE;QAACC,GAAG,EAAEb,KAAK,CAACa;MAAG,CAAE;MACzBL,KAAK,EAAE;QAACM,KAAK,EAAE,EAAE;QAAEC,MAAM,EAAE;MAAE;IAAE,CAChC,CACJ,EACDrB,IAAA,CAACN,IAAI;MAACoB,KAAK,EAAEH,SAAS,GAAGI,MAAM,CAACO,aAAa,GAAG,IAAK;MAAAL,QAAA,EAAEZ;IAAI,CAAO,CAAC,EACnEH,KAAA,CAACT,IAAI;MAACqB,KAAK,EAAEC,MAAM,CAACQ,gBAAiB;MAAAN,QAAA,GACjCjB,IAAA,CAACL,MAAM;QAAC6B,KAAK,EAAC,WAAW;QAACC,OAAO,EAAEZ,cAAe;QAACa,KAAK,EAAEf,SAAS,GAAG,OAAO,GAAG;MAAK,CAAE,CAAC,EACxFX,IAAA,CAACP,IAAI;QAACqB,KAAK,EAAEC,MAAM,CAACY;MAAM,CAAE,CAAC,EAC7B3B,IAAA,CAACL,MAAM;QAAC6B,KAAK,EAAC,QAAQ;QAACC,OAAO,EAAElB,YAAa;QAACmB,KAAK,EAAC;MAAK,CAAE,CAAC;IAAA,CAC1D,CAAC;EAAA,CACG,CAAC;AAEvB;AAEA,IAAMX,MAAM,GAAGnB,UAAU,CAACgC,MAAM,CAAC;EAC7BZ,aAAa,EAAE;IACXa,aAAa,EAAE,KAAK;IACpBC,cAAc,EAAE,eAAe;IAC/BC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EACpB,CAAC;EACDT,gBAAgB,EAAE;IACdM,aAAa,EAAE,KAAK;IACpBC,cAAc,EAAE;EACpB,CAAC;EACDH,KAAK,EAAE;IACHP,KAAK,EAAE;EACX,CAAC;EACDE,aAAa,EAAE;IACXW,kBAAkB,EAAE,cAAc;IAClCP,KAAK,EAAE;EACX;AACJ,CAAC,CAAC;AAEF,eAAevB,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}