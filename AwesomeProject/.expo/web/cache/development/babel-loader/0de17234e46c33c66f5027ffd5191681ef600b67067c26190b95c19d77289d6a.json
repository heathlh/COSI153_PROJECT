{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction AccountingSystem() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    accounts = _useState2[0],\n    setAccounts = _useState2[1];\n  var _useState3 = useState({\n      date: '',\n      amount: '',\n      detail: ''\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    newAccount = _useState4[0],\n    setNewAccount = _useState4[1];\n  var handleAddAccount = function handleAddAccount() {\n    setAccounts([].concat(_toConsumableArray(accounts), [newAccount]));\n    setNewAccount({\n      date: '',\n      amount: '',\n      detail: ''\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.instructions,\n      children: \"Add an account:\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      value: newAccount.date,\n      onChangeText: function onChangeText(text) {\n        return setNewAccount(_objectSpread(_objectSpread({}, newAccount), {}, {\n          date: text\n        }));\n      },\n      placeholder: \"Date\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      value: newAccount.amount,\n      onChangeText: function onChangeText(text) {\n        return setNewAccount(_objectSpread(_objectSpread({}, newAccount), {}, {\n          amount: text\n        }));\n      },\n      placeholder: \"Amount\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      value: newAccount.detail,\n      onChangeText: function onChangeText(text) {\n        return setNewAccount(_objectSpread(_objectSpread({}, newAccount), {}, {\n          detail: text\n        }));\n      },\n      placeholder: \"Detail\"\n    }), _jsx(Button, {\n      title: \"Add Account\",\n      onPress: handleAddAccount\n    }), _jsx(ScrollView, {\n      children: accounts.map(function (account, index) {\n        return _jsxs(View, {\n          style: styles.account,\n          children: [_jsx(Text, {\n            children: account.date\n          }), _jsx(Text, {\n            children: account.amount\n          }), _jsx(Text, {\n            children: account.detail\n          })]\n        }, index);\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: 10,\n    paddingHorizontal: 10\n  },\n  instructions: {\n    fontSize: 16,\n    marginBottom: 10\n  },\n  input: {\n    width: '100%',\n    marginBottom: 10\n  },\n  account: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 10,\n    padding: 10,\n    borderColor: '#000',\n    borderWidth: 1\n  }\n});\nexport default AccountingSystem;","map":{"version":3,"names":["React","useState","View","Text","TextInput","Button","StyleSheet","ScrollView","jsx","_jsx","jsxs","_jsxs","AccountingSystem","_useState","_useState2","_slicedToArray","accounts","setAccounts","_useState3","date","amount","detail","_useState4","newAccount","setNewAccount","handleAddAccount","concat","_toConsumableArray","style","styles","container","children","instructions","input","value","onChangeText","text","_objectSpread","placeholder","title","onPress","map","account","index","create","flex","paddingTop","paddingHorizontal","fontSize","marginBottom","width","flexDirection","justifyContent","padding","borderColor","borderWidth"],"sources":["/Users/liaohang/Desktop/COSI153/COSI153_PROJECT/AwesomeProject/components/AccountingSystem.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, TextInput, Button, StyleSheet, ScrollView } from 'react-native';\n\nfunction AccountingSystem() {\n    const [accounts, setAccounts] = useState([]);\n    const [newAccount, setNewAccount] = useState({date: '', amount: '', detail: ''});\n\n    const handleAddAccount = () => {\n        setAccounts([...accounts, newAccount]);\n        setNewAccount({date: '', amount: '', detail: ''});\n    }\n\n    return (\n        <View style={styles.container}>\n            <Text style={styles.instructions}>Add an account:</Text>\n            <TextInput\n                style={styles.input}\n                value={newAccount.date}\n                onChangeText={(text) => setNewAccount({...newAccount, date: text})}\n                placeholder=\"Date\"\n            />\n            <TextInput\n                style={styles.input}\n                value={newAccount.amount}\n                onChangeText={(text) => setNewAccount({...newAccount, amount: text})}\n                placeholder=\"Amount\"\n            />\n            <TextInput\n                style={styles.input}\n                value={newAccount.detail}\n                onChangeText={(text) => setNewAccount({...newAccount, detail: text})}\n                placeholder=\"Detail\"\n            />\n            <Button title=\"Add Account\" onPress={handleAddAccount} />\n            <ScrollView>\n                {accounts.map((account, index) => \n                    <View key={index} style={styles.account}>\n                        <Text>{account.date}</Text>\n                        <Text>{account.amount}</Text>\n                        <Text>{account.detail}</Text>\n                    </View>\n                )}\n            </ScrollView>\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        paddingTop: 10,\n        paddingHorizontal: 10,\n    },\n    instructions: {\n        fontSize: 16,\n        marginBottom: 10,\n    },\n    input: {\n        width: '100%',\n        marginBottom: 10,\n    },\n    account: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        marginBottom: 10,\n        padding: 10,\n        borderColor: '#000',\n        borderWidth: 1,\n    },\n});\n\nexport default AccountingSystem;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}