{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction AccountingSystem() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    transactions = _useState2[0],\n    setTransactions = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    accountName = _useState4[0],\n    setAccountName = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    accountNote = _useState6[0],\n    setAccountNote = _useState6[1];\n  var handleAddTransaction = function handleAddTransaction() {\n    var newTransaction = {\n      date: new Date().toLocaleDateString(),\n      amount: 0,\n      note: ''\n    };\n    setTransactions([].concat(_toConsumableArray(transactions), [newTransaction]));\n  };\n  var calculateBalance = function calculateBalance() {\n    return transactions.reduce(function (total, transaction) {\n      return total + transaction.amount;\n    }, 0);\n  };\n  var handleAccountNameChange = function handleAccountNameChange() {\n    Alert.prompt(\"Change Account Name\", \"Enter the new account name:\", function (text) {\n      setAccountName(text);\n    });\n  };\n  var handleAccountNoteChange = function handleAccountNoteChange() {\n    Alert.prompt(\"Change Account Note\", \"Enter the new account note:\", function (text) {\n      setAccountNote(text);\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.accountHeader,\n      children: [_jsx(Button, {\n        onPress: handleAccountNameChange,\n        title: accountName || \"Set Account Name\"\n      }), _jsx(Text, {\n        children: calculateBalance()\n      }), _jsx(Button, {\n        onPress: handleAccountNoteChange,\n        title: accountNote || \"Set Account Note\"\n      })]\n    }), _jsx(Button, {\n      title: \"Add Transaction\",\n      onPress: handleAddTransaction\n    }), _jsx(ScrollView, {\n      children: transactions.map(function (transaction, index) {\n        return _jsxs(View, {\n          style: styles.transaction,\n          children: [_jsx(Text, {\n            children: transaction.date\n          }), _jsx(Text, {\n            children: transaction.amount\n          }), _jsx(Text, {\n            children: transaction.note\n          })]\n        }, index);\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: 10,\n    paddingHorizontal: 10\n  },\n  accountHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 10,\n    padding: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: 'black'\n  },\n  transaction: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 10,\n    padding: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: 'black'\n  }\n});\nexport default AccountingSystem;","map":{"version":3,"names":["React","useState","View","Text","Button","StyleSheet","ScrollView","Alert","jsx","_jsx","jsxs","_jsxs","AccountingSystem","_useState","_useState2","_slicedToArray","transactions","setTransactions","_useState3","_useState4","accountName","setAccountName","_useState5","_useState6","accountNote","setAccountNote","handleAddTransaction","newTransaction","date","Date","toLocaleDateString","amount","note","concat","_toConsumableArray","calculateBalance","reduce","total","transaction","handleAccountNameChange","prompt","text","handleAccountNoteChange","style","styles","container","children","accountHeader","onPress","title","map","index","create","flex","paddingTop","paddingHorizontal","flexDirection","justifyContent","marginBottom","padding","borderBottomWidth","borderBottomColor"],"sources":["/Users/liaohang/Desktop/COSI153/COSI153_PROJECT/AwesomeProject/components/AccountingSystem.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, Button, StyleSheet, ScrollView, Alert } from 'react-native';\n\nfunction AccountingSystem() {\n    const [transactions, setTransactions] = useState([]);\n    const [accountName, setAccountName] = useState(\"\");\n    const [accountNote, setAccountNote] = useState(\"\");\n\n    const handleAddTransaction = () => {\n        const newTransaction = {\n            date: new Date().toLocaleDateString(),\n            amount: 0,\n            note: ''\n        };\n        setTransactions([...transactions, newTransaction]);\n    }\n\n    const calculateBalance = () => {\n        return transactions.reduce((total, transaction) => total + transaction.amount, 0);\n    }\n\n    const handleAccountNameChange = () => {\n        Alert.prompt(\n            \"Change Account Name\",\n            \"Enter the new account name:\",\n            (text) => {\n                setAccountName(text);\n            }\n        );\n    }\n\n    const handleAccountNoteChange = () => {\n        Alert.prompt(\n            \"Change Account Note\",\n            \"Enter the new account note:\",\n            (text) => {\n                setAccountNote(text);\n            }\n        );\n    }\n\n    return (\n        <View style={styles.container}>\n            <View style={styles.accountHeader}>\n                <Button onPress={handleAccountNameChange} title={accountName || \"Set Account Name\"} />\n                <Text>{calculateBalance()}</Text>\n                <Button onPress={handleAccountNoteChange} title={accountNote || \"Set Account Note\"} />\n            </View>\n            <Button title=\"Add Transaction\" onPress={handleAddTransaction} />\n            <ScrollView>\n                {transactions.map((transaction, index) => (\n                    <View key={index} style={styles.transaction}>\n                        <Text>{transaction.date}</Text>\n                        <Text>{transaction.amount}</Text>\n                        <Text>{transaction.note}</Text>\n                    </View>\n                ))}\n            </ScrollView>\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        paddingTop: 10,\n        paddingHorizontal: 10,\n    },\n    accountHeader: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        marginBottom: 10,\n        padding: 10,\n        borderBottomWidth: 1,\n        borderBottomColor: 'black',\n    },\n    transaction: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        marginBottom: 10,\n        padding: 10,\n        borderBottomWidth: 1,\n        borderBottomColor: 'black',\n    },\n});\n\nexport default AccountingSystem;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}