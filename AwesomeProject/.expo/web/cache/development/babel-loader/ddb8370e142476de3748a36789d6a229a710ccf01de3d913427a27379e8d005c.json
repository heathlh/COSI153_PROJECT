{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction AccountingSystem() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    accounts = _useState2[0],\n    setAccounts = _useState2[1];\n  var handleAddAccount = function handleAddAccount() {\n    var newAccount = {\n      name: 'Account ' + (accounts.length + 1),\n      transactions: [],\n      note: ''\n    };\n    setAccounts([].concat(_toConsumableArray(accounts), [newAccount]));\n  };\n  var handleAddTransaction = function handleAddTransaction(accountIndex) {\n    var transaction = {\n      date: new Date().toLocaleDateString(),\n      amount: 0,\n      note: ''\n    };\n    var newAccounts = _toConsumableArray(accounts);\n    newAccounts[accountIndex].transactions.push(transaction);\n    setAccounts(newAccounts);\n  };\n  var calculateBalance = function calculateBalance(transactions) {\n    return transactions.reduce(function (total, transaction) {\n      return total + transaction.amount;\n    }, 0);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Button, {\n      title: \"Add Account\",\n      onPress: handleAddAccount\n    }), _jsx(ScrollView, {\n      children: accounts.map(function (account, index) {\n        return _jsxs(View, {\n          style: styles.account,\n          children: [_jsxs(View, {\n            style: styles.accountHeader,\n            children: [_jsx(Text, {\n              children: account.name\n            }), _jsx(Text, {\n              children: calculateBalance(account.transactions)\n            }), _jsx(Text, {\n              children: account.note\n            }), _jsx(Button, {\n              title: \"Add Transaction\",\n              onPress: function onPress() {\n                return handleAddTransaction(index);\n              }\n            })]\n          }), account.transactions.map(function (transaction, transactionIndex) {\n            return _jsxs(View, {\n              style: styles.transaction,\n              children: [_jsx(Text, {\n                children: transaction.date\n              }), _jsx(Text, {\n                children: transaction.amount\n              }), _jsx(Text, {\n                children: transaction.note\n              })]\n            }, transactionIndex);\n          })]\n        }, index);\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: 10,\n    paddingHorizontal: 10\n  },\n  account: {\n    marginBottom: 20\n  },\n  accountHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 10\n  },\n  transaction: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 10,\n    padding: 10,\n    borderColor: '#000',\n    borderWidth: 1\n  }\n});\nexport default AccountingSystem;","map":{"version":3,"names":["React","useState","View","Text","TextInput","Button","StyleSheet","ScrollView","jsx","_jsx","jsxs","_jsxs","AccountingSystem","_useState","_useState2","_slicedToArray","accounts","setAccounts","handleAddAccount","newAccount","name","length","transactions","note","concat","_toConsumableArray","handleAddTransaction","accountIndex","transaction","date","Date","toLocaleDateString","amount","newAccounts","push","calculateBalance","reduce","total","style","styles","container","children","title","onPress","map","account","index","accountHeader","transactionIndex","create","flex","paddingTop","paddingHorizontal","marginBottom","flexDirection","justifyContent","padding","borderColor","borderWidth"],"sources":["/Users/liaohang/Desktop/COSI153/COSI153_PROJECT/AwesomeProject/components/AccountingSystem.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, TextInput, Button, StyleSheet, ScrollView } from 'react-native';\n\nfunction AccountingSystem() {\n    const [accounts, setAccounts] = useState([]);\n\n    const handleAddAccount = () => {\n        const newAccount = {\n            name: 'Account ' + (accounts.length + 1),\n            transactions: [],\n            note: ''\n        };\n        setAccounts([...accounts, newAccount]);\n    }\n\n    const handleAddTransaction = (accountIndex) => {\n        const transaction = {\n            date: new Date().toLocaleDateString(),\n            amount: 0,\n            note: ''\n        };\n        const newAccounts = [...accounts];\n        newAccounts[accountIndex].transactions.push(transaction);\n        setAccounts(newAccounts);\n    }\n\n    const calculateBalance = (transactions) => {\n        return transactions.reduce((total, transaction) => total + transaction.amount, 0);\n    }\n\n    return (\n        <View style={styles.container}>\n            <Button title=\"Add Account\" onPress={handleAddAccount} />\n            <ScrollView>\n                {accounts.map((account, index) => (\n                    <View key={index} style={styles.account}>\n                        <View style={styles.accountHeader}>\n                            <Text>{account.name}</Text>\n                            <Text>{calculateBalance(account.transactions)}</Text>\n                            <Text>{account.note}</Text>\n                            <Button title=\"Add Transaction\" onPress={() => handleAddTransaction(index)} />\n                        </View>\n                        {account.transactions.map((transaction, transactionIndex) => (\n                            <View key={transactionIndex} style={styles.transaction}>\n                                <Text>{transaction.date}</Text>\n                                <Text>{transaction.amount}</Text>\n                                <Text>{transaction.note}</Text>\n                            </View>\n                        ))}\n                    </View>\n                ))}\n            </ScrollView>\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        paddingTop: 10,\n        paddingHorizontal: 10,\n    },\n    account: {\n        marginBottom: 20,\n    },\n    accountHeader: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        marginBottom: 10,\n    },\n    transaction: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        marginBottom: 10,\n        padding: 10,\n        borderColor: '#000',\n        borderWidth: 1,\n    },\n});\n\nexport default AccountingSystem;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,UAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGxC,SAASC,gBAAgBA,CAAA,EAAG;EACxB,IAAAC,SAAA,GAAgCZ,QAAQ,CAAC,EAAE,CAAC;IAAAa,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAArCG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAE5B,IAAMI,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAA,EAAS;IAC3B,IAAMC,UAAU,GAAG;MACfC,IAAI,EAAE,UAAU,IAAIJ,QAAQ,CAACK,MAAM,GAAG,CAAC,CAAC;MACxCC,YAAY,EAAE,EAAE;MAChBC,IAAI,EAAE;IACV,CAAC;IACDN,WAAW,IAAAO,MAAA,CAAAC,kBAAA,CAAKT,QAAQ,IAAEG,UAAU,EAAC,CAAC;EAC1C,CAAC;EAED,IAAMO,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAIC,YAAY,EAAK;IAC3C,IAAMC,WAAW,GAAG;MAChBC,IAAI,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,CAAC;MACrCC,MAAM,EAAE,CAAC;MACTT,IAAI,EAAE;IACV,CAAC;IACD,IAAMU,WAAW,GAAAR,kBAAA,CAAOT,QAAQ,CAAC;IACjCiB,WAAW,CAACN,YAAY,CAAC,CAACL,YAAY,CAACY,IAAI,CAACN,WAAW,CAAC;IACxDX,WAAW,CAACgB,WAAW,CAAC;EAC5B,CAAC;EAED,IAAME,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIb,YAAY,EAAK;IACvC,OAAOA,YAAY,CAACc,MAAM,CAAC,UAACC,KAAK,EAAET,WAAW;MAAA,OAAKS,KAAK,GAAGT,WAAW,CAACI,MAAM;IAAA,GAAE,CAAC,CAAC;EACrF,CAAC;EAED,OACIrB,KAAA,CAACT,IAAI;IAACoC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC1BhC,IAAA,CAACJ,MAAM;MAACqC,KAAK,EAAC,aAAa;MAACC,OAAO,EAAEzB;IAAiB,CAAE,CAAC,EACzDT,IAAA,CAACF,UAAU;MAAAkC,QAAA,EACNzB,QAAQ,CAAC4B,GAAG,CAAC,UAACC,OAAO,EAAEC,KAAK;QAAA,OACzBnC,KAAA,CAACT,IAAI;UAAaoC,KAAK,EAAEC,MAAM,CAACM,OAAQ;UAAAJ,QAAA,GACpC9B,KAAA,CAACT,IAAI;YAACoC,KAAK,EAAEC,MAAM,CAACQ,aAAc;YAAAN,QAAA,GAC9BhC,IAAA,CAACN,IAAI;cAAAsC,QAAA,EAAEI,OAAO,CAACzB;YAAI,CAAO,CAAC,EAC3BX,IAAA,CAACN,IAAI;cAAAsC,QAAA,EAAEN,gBAAgB,CAACU,OAAO,CAACvB,YAAY;YAAC,CAAO,CAAC,EACrDb,IAAA,CAACN,IAAI;cAAAsC,QAAA,EAAEI,OAAO,CAACtB;YAAI,CAAO,CAAC,EAC3Bd,IAAA,CAACJ,MAAM;cAACqC,KAAK,EAAC,iBAAiB;cAACC,OAAO,EAAE,SAAAA,QAAA;gBAAA,OAAMjB,oBAAoB,CAACoB,KAAK,CAAC;cAAA;YAAC,CAAE,CAAC;UAAA,CAC5E,CAAC,EACND,OAAO,CAACvB,YAAY,CAACsB,GAAG,CAAC,UAAChB,WAAW,EAAEoB,gBAAgB;YAAA,OACpDrC,KAAA,CAACT,IAAI;cAAwBoC,KAAK,EAAEC,MAAM,CAACX,WAAY;cAAAa,QAAA,GACnDhC,IAAA,CAACN,IAAI;gBAAAsC,QAAA,EAAEb,WAAW,CAACC;cAAI,CAAO,CAAC,EAC/BpB,IAAA,CAACN,IAAI;gBAAAsC,QAAA,EAAEb,WAAW,CAACI;cAAM,CAAO,CAAC,EACjCvB,IAAA,CAACN,IAAI;gBAAAsC,QAAA,EAAEb,WAAW,CAACL;cAAI,CAAO,CAAC;YAAA,GAHxByB,gBAIL,CAAC;UAAA,CACV,CAAC;QAAA,GAbKF,KAcL,CAAC;MAAA,CACV;IAAC,CACM,CAAC;EAAA,CACX,CAAC;AAEf;AAEA,IAAMP,MAAM,GAAGjC,UAAU,CAAC2C,MAAM,CAAC;EAC7BT,SAAS,EAAE;IACPU,IAAI,EAAE,CAAC;IACPC,UAAU,EAAE,EAAE;IACdC,iBAAiB,EAAE;EACvB,CAAC;EACDP,OAAO,EAAE;IACLQ,YAAY,EAAE;EAClB,CAAC;EACDN,aAAa,EAAE;IACXO,aAAa,EAAE,KAAK;IACpBC,cAAc,EAAE,eAAe;IAC/BF,YAAY,EAAE;EAClB,CAAC;EACDzB,WAAW,EAAE;IACT0B,aAAa,EAAE,KAAK;IACpBC,cAAc,EAAE,eAAe;IAC/BF,YAAY,EAAE,EAAE;IAChBG,OAAO,EAAE,EAAE;IACXC,WAAW,EAAE,MAAM;IACnBC,WAAW,EAAE;EACjB;AACJ,CAAC,CAAC;AAEF,eAAe9C,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}