{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ToDoItem from \"./ToDoItem\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction ToDoList() {\n  var _useState = useState([\"Task 1\", \"Task 2\"]),\n    _useState2 = _slicedToArray(_useState, 2),\n    tasks = _useState2[0],\n    setTasks = _useState2[1];\n  var _handleDelete = function handleDelete(index) {\n    setTasks(tasks.filter(function (_, i) {\n      return i !== index;\n    }));\n  };\n  return _jsxs(View, {\n    children: [tasks.map(function (task, index) {\n      return _jsx(ToDoItem, {\n        task: task,\n        handleDelete: function handleDelete() {\n          return _handleDelete(index);\n        }\n      }, index);\n    }), _jsx(Button, {\n      title: \"Add Task\",\n      onPress: function onPress() {\n        return setTasks([].concat(_toConsumableArray(tasks), [\"New Task\"]));\n      }\n    })]\n  });\n}\nexport default ToDoList;","map":{"version":3,"names":["React","useState","View","Button","ToDoItem","jsx","_jsx","jsxs","_jsxs","ToDoList","_useState","_useState2","_slicedToArray","tasks","setTasks","handleDelete","index","filter","_","i","children","map","task","title","onPress","concat","_toConsumableArray"],"sources":["/Users/liaohang/Desktop/COSI153/COSI153_PROJECT/AwesomeProject/components/ToDoList.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Button } from 'react-native';\nimport ToDoItem from './ToDoItem';\n\nfunction ToDoList() {\n    const [tasks, setTasks] = useState([\"Task 1\", \"Task 2\"]);\n\n    const handleDelete = (index) => {\n        setTasks(tasks.filter((_, i) => i !== index));\n    }\n\n    return (\n        <View>\n            {tasks.map((task, index) => \n                <ToDoItem key={index} task={task} handleDelete={() => handleDelete(index)} />\n            )}\n            <Button title=\"Add Task\" onPress={() => setTasks([...tasks, \"New Task\"])} />\n        </View>\n    );\n}\n\nexport default ToDoList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAExC,OAAOC,QAAQ;AAAmB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAElC,SAASC,QAAQA,CAAA,EAAG;EAChB,IAAAC,SAAA,GAA0BT,QAAQ,CAAC,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;IAAAU,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAjDG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EAEtB,IAAMI,aAAY,GAAG,SAAfA,YAAYA,CAAIC,KAAK,EAAK;IAC5BF,QAAQ,CAACD,KAAK,CAACI,MAAM,CAAC,UAACC,CAAC,EAAEC,CAAC;MAAA,OAAKA,CAAC,KAAKH,KAAK;IAAA,EAAC,CAAC;EACjD,CAAC;EAED,OACIR,KAAA,CAACN,IAAI;IAAAkB,QAAA,GACAP,KAAK,CAACQ,GAAG,CAAC,UAACC,IAAI,EAAEN,KAAK;MAAA,OACnBV,IAAA,CAACF,QAAQ;QAAakB,IAAI,EAAEA,IAAK;QAACP,YAAY,EAAE,SAAAA,aAAA;UAAA,OAAMA,aAAY,CAACC,KAAK,CAAC;QAAA;MAAC,GAA3DA,KAA6D,CAAC;IAAA,CACjF,CAAC,EACDV,IAAA,CAACH,MAAM;MAACoB,KAAK,EAAC,UAAU;MAACC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMV,QAAQ,IAAAW,MAAA,CAAAC,kBAAA,CAAKb,KAAK,IAAE,UAAU,EAAC,CAAC;MAAA;IAAC,CAAE,CAAC;EAAA,CAC1E,CAAC;AAEf;AAEA,eAAeJ,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}