{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ToDoItem from \"./ToDoItem\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction ToDoList() {\n  var _useState = useState([\"Task 1\", \"Task 2\"]),\n    _useState2 = _slicedToArray(_useState, 2),\n    tasks = _useState2[0],\n    setTasks = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    newTask = _useState4[0],\n    setNewTask = _useState4[1];\n  var _handleDelete = function handleDelete(index) {\n    setTasks(tasks.filter(function (_, i) {\n      return i !== index;\n    }));\n  };\n  var handleAdd = function handleAdd() {\n    setTasks([].concat(_toConsumableArray(tasks), [newTask]));\n    setNewTask(\"\");\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.instructions,\n      children: \"Instructions: // Enter the name of your new task in the input box at the bottom of the screen then press \\\"Add Task\\\" to add it to the list. Press the \\\"Completed\\\" button to mark a task as completed Press \\\"Delete\\\" to remove a task from the list.\"\n    }), _jsx(ScrollView, {\n      children: tasks.map(function (task, index) {\n        return _jsx(ToDoItem, {\n          task: task,\n          handleDelete: function handleDelete() {\n            return _handleDelete(index);\n          }\n        }, index);\n      })\n    }), _jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        value: newTask,\n        onChangeText: setNewTask,\n        placeholder: \"New task\"\n      }), _jsx(Button, {\n        title: \"Add Task\",\n        onPress: handleAdd\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: 10,\n    paddingHorizontal: 10\n  },\n  instructions: {\n    fontSize: 16,\n    marginBottom: 10\n  },\n  inputContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    position: 'absolute',\n    bottom: 0,\n    width: '100%',\n    padding: 10,\n    backgroundColor: 'white'\n  },\n  input: {\n    width: '80%'\n  }\n});\nexport default ToDoList;","map":{"version":3,"names":["React","useState","View","TextInput","Button","StyleSheet","ScrollView","Text","ToDoItem","jsx","_jsx","jsxs","_jsxs","ToDoList","_useState","_useState2","_slicedToArray","tasks","setTasks","_useState3","_useState4","newTask","setNewTask","handleDelete","index","filter","_","i","handleAdd","concat","_toConsumableArray","style","styles","container","children","instructions","map","task","inputContainer","input","value","onChangeText","placeholder","title","onPress","create","flex","paddingTop","paddingHorizontal","fontSize","marginBottom","flexDirection","justifyContent","alignItems","position","bottom","width","padding","backgroundColor"],"sources":["/Users/liaohang/Desktop/COSI153/COSI153_PROJECT/AwesomeProject/components/ToDoList.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, TextInput, Button, StyleSheet, ScrollView, Text } from 'react-native';\nimport ToDoItem from './ToDoItem';\n\nfunction ToDoList() {\n    const [tasks, setTasks] = useState([\"Task 1\", \"Task 2\"]);\n    const [newTask, setNewTask] = useState(\"\");\n\n    const handleDelete = (index) => {\n        setTasks(tasks.filter((_, i) => i !== index));\n    }\n\n    const handleAdd = () => {\n        setTasks([...tasks, newTask]);\n        setNewTask(\"\");\n    }\n\n    return (\n        <View style={styles.container}>\n            <Text style={styles.instructions}>\n                Instructions: //\n                Enter the name of your new task in the input box at the bottom of the screen\n                then press \"Add Task\" to add it to the list. \n                Press the \"Completed\" button to mark a task as completed\n                Press \"Delete\" to remove a task from the list.\n            </Text>\n            <ScrollView>\n                {tasks.map((task, index) => \n                    <ToDoItem key={index} task={task} handleDelete={() => handleDelete(index)} />\n                )}\n            </ScrollView>\n            <View style={styles.inputContainer}>\n                <TextInput\n                    style={styles.input}\n                    value={newTask}\n                    onChangeText={setNewTask}\n                    placeholder=\"New task\"\n                />\n                <Button title=\"Add Task\" onPress={handleAdd} />\n            </View>\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        paddingTop: 10,\n        paddingHorizontal: 10,\n    },\n    instructions: {\n        fontSize: 16,\n        marginBottom: 10,\n    },\n    inputContainer: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        position: 'absolute',\n        bottom: 0,\n        width: '100%',\n        padding: 10,\n        backgroundColor: 'white',\n    },\n    input: {\n        width: '80%',\n    },\n});\n\nexport default ToDoList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}